"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2995],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return g}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),c=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=c(e.components);return r.createElement(u.Provider,{value:n},e.children)},v={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=c(t),g=a,d=p["".concat(u,".").concat(g)]||p[g]||v[g]||o;return t?r.createElement(d,s(s({ref:n},l),{},{components:t})):r.createElement(d,s({ref:n},l))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=p;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},600:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return u},default:function(){return g},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return v}});var r=t(3117),a=t(102),o=(t(7294),t(3905)),s=["components"],i={},u="Vagrant",c={unversionedId:"os/windows/virtual-machine/vagrant",id:"os/windows/virtual-machine/vagrant",title:"Vagrant",description:"Cheat Sheet",source:"@site/docs/os/windows/virtual-machine/vagrant.md",sourceDirName:"os/windows/virtual-machine",slug:"/os/windows/virtual-machine/vagrant",permalink:"/my-docs/docs/os/windows/virtual-machine/vagrant",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/os/windows/virtual-machine/vagrant.md",tags:[],version:"current",frontMatter:{},sidebar:"windows",previous:{title:"Multipass",permalink:"/my-docs/docs/os/windows/virtual-machine/multipass"},next:{title:"PowerShell",permalink:"/my-docs/docs/os/windows/powershell"}},l={},v=[{value:"Cheat Sheet",id:"cheat-sheet",level:2}],p={toc:v};function g(e){var n=e.components,t=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"vagrant"},"Vagrant"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"# vagrant box add ADDRESS --box-version VALUE --provider PROVIDER\nvagrant box add ubuntu/focal64 --provider=virtualbox\nvagrant box list\nvagrant init ubuntu/focal64 \n\n\n")),(0,o.kt)("h2",{id:"cheat-sheet"},"Cheat Sheet"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"# List the installed boxes\nvagrant box list\n# Add the box for later use\nvagrant box add <name> <box path/HTTP URI>\n# Delete a box\nvagrant box remove <name> virtualbox\n# Check for updates vagrant box update\nvagrant box outdated\n\n# Starts vagrant environment (also provisions only on the FIRST vagrant up) Equivalent to pressing the power buttons on your servers.\nvagrant up\n# Outputs status of the vagrant machine\nvagrant status\n# Stops the vagrant machine\nvagrant halt\n# Restarts vagrant machine, loads new Vagrantfile configuration\nvagrant reload\n# Forces reprovisioning of the vagrant machine\nvagrant provision\nvagrant provision --provision-with ssh\n# Connects to machine via SSH\nvagrant ssh\n# Stops and deletes all traces of the vagrant machine\nvagrant destroy\n# Suspends a virtual machine (remembers state)\nvagrant suspend\n# Resume a suspended machine (vagrant up works just fine for this as well)\nvagrant resume\n# Restart the virtual machine and force provisioning\nvagrant reload --provision\n# Use the debug\nvagrant provision --debug\n\n\n# Get the vagrant version\nvagrant -v\n# outputs status of all vagrant machines\nvagrant global-status\n# same as above, but prunes invalid entries\nvagrant global-status --prune\n# Vagrant can be configured to deploy code!\nvagrant push\n# Runs vagrant up, forces provisioning and logs all output to a file\nvagrant up --provision | tee provision.log\n# Use the environement variable VAGRANT_LOG to set verbosity\nVAGRANT_LOG=info vagrant up\n\n# Show location boxes\nls C:\\Users\\MTX\\.vagrant.d\\boxes\n\n# Remove aLL your local Vagrant Boxes\nvagrant box list | cut -f 1 -d ' ' | xargs -L 1 vagrant box remove -f\n")))}g.isMDXComponent=!0}}]);