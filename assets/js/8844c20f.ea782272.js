"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[328],{3905:function(e,n,r){r.d(n,{Zo:function(){return d},kt:function(){return m}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=t.createContext({}),l=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):c(c({},n),e)),r},d=function(e){var n=l(e.components);return t.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=l(r),m=o,k=u["".concat(s,".").concat(m)]||u[m]||p[m]||a;return r?t.createElement(k,c(c({ref:n},d),{},{components:r})):t.createElement(k,c({ref:n},d))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=u;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var l=2;l<a;l++)c[l]=r[l];return t.createElement.apply(null,c)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},7255:function(e,n,r){r.r(n),r.d(n,{assets:function(){return d},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return p}});var t=r(7462),o=r(3366),a=(r(7294),r(3905)),c=["components"],i={},s="Docker",l={unversionedId:"development/devops/docker",id:"development/devops/docker",title:"Docker",description:"Installation",source:"@site/docs/development/devops/docker.md",sourceDirName:"development/devops",slug:"/development/devops/docker",permalink:"/my-docs/docs/development/devops/docker",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/development/devops/docker.md",tags:[],version:"current",frontMatter:{},sidebar:"development",previous:{title:"Vim",permalink:"/my-docs/docs/development/editor/vim"},next:{title:"Kubernetes",permalink:"/my-docs/docs/development/devops/kubernetes"}},d={},p=[{value:"Installation",id:"installation",level:2},{value:"Push Image to Docker Hub",id:"push-image-to-docker-hub",level:2},{value:"Command",id:"command",level:2}],u={toc:p};function m(e){var n=e.components,r=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"docker"},"Docker"),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("h2",{id:"push-image-to-docker-hub"},"Push Image to Docker Hub"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# Log into the Docker public registry\ndocker login\n\n# Tag the image\ndocker tag workspace:latest becagis/workspace:latest\n\n# Publish the image\ndocker push becagis/workspace:latest\n")),(0,a.kt)("h2",{id:"command"},"Command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# Stop containers and remove volumes\ndocker-compose down -v\n\n# Force kill all containers by running\ndocker kill $(docker ps -q)\n\n# Remove all containers\ndocker rm $(docker ps -a -q)\n\n# Remove all docker images\ndocker rmi $(docker images -q)\n\n# Remove all dangling docker volumes\ndocker volume rm $(docker volume ls -qf dangling=true)\n\n# Prune the old images\ndocker system prune -a\n\n# update all images, should be run regularly to fetch published updates\nfor i in $(docker images| awk 'NR>1{print $1\":\"$2}'| grep -v '<none>'); do docker pull \"$i\" ;done\n\n# Get Docker Host IP\nip addr show | grep \"\\binet\\b.*\\bdocker0\\b\" | awk '{print $2}' | cut -d '/' -f 1\necho $(ip -4 addr show docker0 | grep -Po 'inet \\K[\\d.]+')\n\n# List all Docker Container Names and their IPs\ndocker ps -q | xargs -n 1 docker inspect --format '{{ .Name }} {{range .NetworkSettings.Networks}} {{.IPAddress}}{{end}}' | sed 's#^/##';\n\n# List Docker Container Names and their IPs\ndocker inspect mynginx | grep IPAddress\n\n\n\ndocker system df\ndocker ps --size\n")))}m.isMDXComponent=!0}}]);