"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[328],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),i=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},d=function(e){var n=i(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=i(t),m=o,k=u["".concat(l,".").concat(m)]||u[m]||p[m]||a;return t?r.createElement(k,c(c({ref:n},d),{},{components:t})):r.createElement(k,c({ref:n},d))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,c[1]=s;for(var i=2;i<a;i++)c[i]=t[i];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},7255:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return i},toc:function(){return p}});var r=t(3117),o=t(102),a=(t(7294),t(3905)),c=["components"],s={},l="Docker",i={unversionedId:"development/devops/docker",id:"development/devops/docker",title:"Docker",description:"Installation",source:"@site/docs/development/devops/docker.md",sourceDirName:"development/devops",slug:"/development/devops/docker",permalink:"/my-docs/docs/development/devops/docker",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/development/devops/docker.md",tags:[],version:"current",frontMatter:{},sidebar:"development",previous:{title:"Vim",permalink:"/my-docs/docs/development/editor/vim"},next:{title:"Kubernetes",permalink:"/my-docs/docs/development/devops/kubernetes"}},d={},p=[{value:"Installation",id:"installation",level:2},{value:"Push Image to Docker Hub",id:"push-image-to-docker-hub",level:2},{value:"Command",id:"command",level:2},{value:"Fix permissions",id:"fix-permissions",level:2},{value:"CI/CD Github",id:"cicd-github",level:2},{value:"Check space",id:"check-space",level:2}],u={toc:p};function m(e){var n=e.components,t=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"docker"},"Docker"),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"Install Docker CE"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'# Update System\nsudo apt -y update\n\n# Install basic dependencies\nsudo apt -y install apt-transport-https ca-certificates curl gnupg-agent software-properties-common\n\n# Remove old versions\nsudo apt remove docker docker-engine docker.io containerd runc\n\n# Import Docker repository GPG key\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/docker-archive-keyring.gpg\n\n# Add Docker CE repository to Ubuntu\nsudo add-apt-repository -y "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"\n\n# Install Docker CE\nsudo apt -y update\nsudo apt -y install docker-ce docker-ce-cli containerd.io\n')),(0,a.kt)("p",null,"Install Docker Compose v2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir -p ~/.docker/cli-plugins/\ncurl -SL https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose\nchmod +x ~/.docker/cli-plugins/docker-compose\n")),(0,a.kt)("h2",{id:"push-image-to-docker-hub"},"Push Image to Docker Hub"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# Log into the Docker public registry\ndocker login\n\n# Tag the image\ndocker tag workspace:latest becagis/workspace:latest\n\n# Publish the image\ndocker push becagis/workspace:latest\n")),(0,a.kt)("h2",{id:"command"},"Command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# Stop containers and remove volumes\ndocker-compose down -\n\n# Stop and remove a container \ndocker stop CONTAINER && docker rm $_\n\n# Force kill all containers by running\ndocker kill $(docker ps -q)\n\n# Remove all containers\ndocker rm $(docker ps -a -q)\n\n# Remove all docker images\ndocker rmi $(docker images -q)\n\n# Remove all dangling docker volumes\ndocker volume rm $(docker volume ls -qf dangling=true)\n\n# Prune the old images\ndocker system prune -a\n\n# update all images, should be run regularly to fetch published updates\nfor i in $(docker images| awk 'NR>1{print $1\":\"$2}'| grep -v '<none>'); do docker pull \"$i\" ;done\n\n# Get Docker Host IP\nip addr show | grep \"\\binet\\b.*\\bdocker0\\b\" | awk '{print $2}' | cut -d '/' -f 1\necho $(ip -4 addr show docker0 | grep -Po 'inet \\K[\\d.]+')\n\n# List all Docker Container Names and their IPs\ndocker ps -q | xargs -n 1 docker inspect --format '{{ .Name }} {{range .NetworkSettings.Networks}} {{.IPAddress}}{{end}}' | sed 's#^/##';\n\n# List Docker Container Names and their IPs\ndocker inspect mynginx | grep IPAddress\n\n\n\ndocker system df\ndocker ps --size\n")),(0,a.kt)("h2",{id:"fix-permissions"},"Fix permissions"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://linuxhandbook.com/docker-permission-denied/"},"https://linuxhandbook.com/docker-permission-denied/"))),(0,a.kt)("h2",{id:"cicd-github"},"CI/CD Github"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/cytechmobile/logstash-postgres/blob/master/.github/workflows/docker-image.yml"},"https://github.com/cytechmobile/logstash-postgres/blob/master/.github/workflows/docker-image.yml"))),(0,a.kt)("h2",{id:"check-space"},"Check space"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker system df\n\n# Space used by each container, image and volume\ndocker system df -v\n\n# Filter only >= 1GB\ndocker system df -v | grep GB\n\n# Space used by running containers\ndocker ps -s\n")))}m.isMDXComponent=!0}}]);